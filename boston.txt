import numpy as np

import pandas as pd

import keras

import sklearn

df=pd.read_csv("Boston.csv")

df.head(10)

df.describe()

df.isnull().sum()

df.corr()['medv'].sort_values()

x=df.loc[:,['lstat','ptratio','rm']]

y=df.loc[:,['medv']]

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=10)

from sklearn.preprocessing import StandardScaler

scaler=StandardScaler()
scaler.fit(x_train)
x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)

model=keras.Sequential([
    keras.layers.Dense(128,activation='relu',input_shape=(3,)),
    keras.layers.Dense(64,activation='relu'),
    keras.layers.Dense(1,activation='relu')
])

model.compile(optimizer='adam',loss='mse',metrics=['mae'])

model.fit(x_train,y_train,epochs=20,validation_split=0.5)

output=model.evaluate(x_test,y_test)

y_pred=model.predict(x_test)

y_pred


